[package]
name = "shapers"
version = "0.3.0"
license-file = "LICENSE"
description = "A library for fitting shapes and operations on geometrical objects"
repository = "https://github.com/borgesaugusto/shapers"
readme = "README.md"
keywords = ["geometry", "shapes", "circle"]
categories = ["science", "mathematics"]

edition = "2021"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
# The name of the native library. This is the name which will be used in Python to import the
# library (i.e. `import string_sum`). If you change this, you must also change the name of the
# `#[pymodule]` in `src/lib.rs`.
name = "shapers"
# "cdylib" is necessary to produce a shared library for Python to import from.
#
# Downstream Rust code (including code in `bin/`, `examples/`, and `tests/`) will not be able
# to `use string_sum;` unless the "rlib" or "lib" crate type is also included, e.g.:
crate-type = ["cdylib", "rlib"]
# crate-type = ["cdylib", "lib"]

[dependencies]
pyo3 = { version = "0.22.1", features = ["extension-module"] }
argmin = "0.10.0"
argmin-math = "0.4.0"
# argmin-observer-slog = "0.1.0"
ndarray = "0.15.6"
ndarray-linalg = "0.16.0"
finitediff = { version = "0.1.4", features = ["ndarray"] }
blas-src = { version = "0.9", features = ["openblas"] }


# openblas-src = { version = "0.10", features = ["cblas", "lapacke"] }
